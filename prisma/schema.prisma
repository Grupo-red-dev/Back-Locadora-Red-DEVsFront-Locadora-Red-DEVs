generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model autor {
  id_autor   Int       @id @default(autoincrement())
  nome_autor String?   @db.VarChar(100)
  descricao  String?   @db.VarChar(500)
  produto    produto[]
}

model carrinho {
  id_carrinho         Int      @id @default(autoincrement())
  id_usuario_carrinho Int?
  id_produto_carrinho Int?
  usuario             usuario? @relation(fields: [id_usuario_carrinho], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "carrinho_ibfk_1")
  produto             produto? @relation(fields: [id_produto_carrinho], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "carrinho_ibfk_2")

  @@index([id_produto_carrinho], map: "id_produto_carrinho")
  @@index([id_usuario_carrinho], map: "id_usuario_carrinho")
}

model favorito {
  id_favorito         Int  @id @default(autoincrement())
  id_usuario_favorito Int?
  id_produto_favorito Int?
}

model midia {
  id_midia   Int       @id @default(autoincrement())
  nome_midia String?   @db.VarChar(50)
  produto    produto[]
}

model produto {
  id_produto       Int                @id @default(autoincrement())
  nome_produto     String?            @db.VarChar(100)
  data_produto     Int?
  preco_produto    Decimal?           @db.Decimal(10, 0)
  descricao        String?            @db.VarChar(1000)
  foto_produto     String?            @db.VarChar(300)
  id_autor_produto Int?
  id_tipo_produto  Int?
  id_midia_produto Int?
  carrinho         carrinho[]
  link_prod_genero link_prod_genero[]
  autor            autor?             @relation(fields: [id_autor_produto], references: [id_autor], onDelete: NoAction, onUpdate: NoAction, map: "produto_ibfk_1")
  tipo             tipo?              @relation(fields: [id_tipo_produto], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "produto_ibfk_2")
  midia            midia?             @relation(fields: [id_midia_produto], references: [id_midia], onDelete: NoAction, onUpdate: NoAction, map: "produto_ibfk_4")

  @@index([id_midia_produto], map: "id_midia_produto")
  @@index([id_tipo_produto], map: "id_tipo_produto")
  @@index([id_autor_produto], map: "id_autor_produto")
}

model tipo {
  id_tipo   Int         @id @default(autoincrement())
  nome_tipo String?     @db.VarChar(50)
  categoria categoria[]
  produto   produto[]
}

model usuario {
  id_usuario    Int        @id @default(autoincrement())
  nome_usuario  String?    @db.VarChar(50)
  email_usuario String?    @db.VarChar(100)
  senha_usuario String?    @db.VarChar(200)
  foto_usuario  String?    @db.VarChar(300)
  nivel_acesso  Int?
  carrinho      carrinho[]
}

model link_prod_genero {
  id_link_prod_genero Int        @id @default(autoincrement())
  id_produto_link     Int?
  id_categoria_link   Int?
  produto             produto?   @relation(fields: [id_produto_link], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "link_prod_genero_ibfk_1")
  categoria           categoria? @relation(fields: [id_categoria_link], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "link_prod_genero_ibfk_2")

  @@index([id_produto_link], map: "id_produto_link")
  @@index([id_categoria_link], map: "id_categoria_link")
}

model categoria {
  id_categoria      Int                @id @default(autoincrement())
  nome_categoria    String?            @db.VarChar(50)
  id_tipo_categoria Int?
  tipo              tipo?              @relation(fields: [id_tipo_categoria], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "categoria_ibfk_1")
  link_prod_genero  link_prod_genero[]

  @@index([id_tipo_categoria], map: "id_tipo_categoria")
}
